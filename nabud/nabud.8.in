.\"
.\" Copyright (c) 2023 Jason R. Thorpe.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
.\" BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
.\" AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
.\" OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd February 24, 2023
.Dt NABUD 8
.Sh NAME
.Nm nabud
.Nd NABU Personal Computer server
.Sh SYNOPSIS
.Nm
.Op Fl c Ar conf
.Op Fl d Ar subsys
.Op Fl f
.Op Fl l Ar logfile
.\" extras-darwin .Op Fl L
.Op Fl u Ar user
.Op Fl U Ar umask
.Sh DESCRIPTION
.Nm
is a server for NABU Personal Computers.
The NABU Personal Computer is a Z80-based machine system sold briefly
in Canada in the early 1980s that downloaded all of its software from
participating cable TV networks using an external appliance called
the
.Dq Adaptor .
The NABU was connected to the Adaptor using an RS422 serial interface
running at 111,860 baud and sent requests to the Adaptor for indiviual
segments of numbered images.
The communication with the cable TV network was one-way, so the content
was broadcast in a continuous
.Dq cycle ;
the Adaptor simply waited for the requested packet to arrive, at which
point it was relayed to the waiting NABU.
The content was interleaved such that retrieving the next segment of
a particular image did not incur an excessively long wait time.
The Adaptor itself was relatively simple and did very little local
processing beyond extremely basic packet filtering that could be
achieved on a Motorola 6801 MCU.
The serial interface was based around the Western Digital TR1863P UART.
.Pp
.Nm
emulates the original Adaptor protocol and has the following features:
.Bl -bullet
.It
Serve pre-packetized
.Dq pak
files.
These files can be unencrypted or encrypted using the NabuRetroNet scheme.
This is the format used to vend the orginal NABU Network cycles from 1984.
.It
Serve flat
.Dq nabu
files.
These files are simply flat binaries that are loaded into a fixed memory
location by the NABU ROM.
They are packetized on-the-fly by
.Nm .
.It
Flexible configuration model that allows up to 254 content
.Dq channels
from an arbitrary number of
.Dq sources .
.It
Serve an arbitrary number of NABU PCs, limited only by the number of
serial ports you can connect to the server.
.It
Serve an arbitrary number of simulated NABU PCs
.Pq for example, MAME
on the local machine or on your local network over TCP/IP.
.It
Selection of per-connection alternative files
.Pq and a per-channel default file
to be served to the
NABU when the NABU ROM requests image 000001
.Pq the boot image .
.It
A control program,
.Xr nabuctl 1 ,
that lets you get information about channels and connections, as well as
list the contents if the NabuRetroNet
.Dq HomeBrew
channel and select different files to be loaded by the NABU.
.It
Support for the NABU HCCA Application Communication Protocol.
NHACP is a new protocol extension under active development that
allows programs running on the NABU to access remote storage.
.It
Support for the NabuRetroNet protocol extensions.
These protocol extensions provide support for accessing remote
storage and other features.
.Nm
supports NabuRetroNet protocol extension version
.Em v2023.02.03.00 .
.It
Minimal privilege requirements.
.Nm
requires the ability to open serial ports for reading and writing in
order to communicate with NABU PCs.
If only TCP/IP is used,
.Nm
requires no special privileges.
.It
Extremely portable implementation that relies mainly on standard
POSIX and C99 interfaces and keeps external dependencies to a
minimum.
.El
.Pp
.Nm
accepts the following options:
.Bl -tag -width Fl
.It Fl c Ar conf
Specifies an alternative location for the
.Nm
configuration file.
.It Fl d Ar subsys
Enables debugging messages for the specified subsystem.
Multiple
.Fl d
options can be specified.
This option also implies the
.Fl f
option.
Available subystems:
.Bl -tag -width "retronet"
.It all
Enables debugging for all subsystems.
.It any
This is an alias for
.Dq all .
.It adaptor
The routines that implement the Adaptor protocol.
.It atom
The routines used to serialize control messages.
.It cli
The command line support routines.
.It conn_io
The connection I/O routines used by NABU connections and control connections.
.It control
The control message routines.
.It fileio
The abstracted file I/O routines used to read and write local and remote
files.
.It image
The routines that manage NABU program images.
.It nhacp
The routines that implement the NHACP protocol.
.It retronet
The routines that implement the RetroNet protocol extensions.
.It stext
The routines that implement the storage extensions back-end, shared by
NHACP and RetroNet.
.El
.It Fl f
Runs
.Nm
in the foreground.
Without this option,
.Nm
detaches from the controlling terminal and runs as a daemon.
.It Fl l Ar logfile
Tells
.Nm
to write log messages to the specified log file.
By default,
.Nm
logs all messages to the system log using
.Xr syslog 3
with the
.Dv LOG_USER
facility.
Note that when
.Fl f
is specified, all log message are written to the controlling terminal.
.\" extras-darwin .It Fl L
.\" extras-darwin Runs
.\" extras-darwin .Nm
.\" extras-darwin in launchd mode.
.\" extras-darwin This is similar to the
.\" extras-darwin .Fl f
.\" extras-darwin option in that it causes
.\" extras-darwin .Nm
.\" extras-darwin to run in the foreground, but differs in that it
.\" extras-darwin does not alter the logging configuration.
.\" extras-linux .It Fl S
.\" extras-linux Runs
.\" extras-linux .Nm
.\" extras-linux in systemd mode.
.\" extras-linux This is similar to the
.\" extras-linux .Fl f
.\" extras-linux option in that it causes
.\" extras-linux .Nm
.\" extras-linux to run in the foreground, but differs in that it
.\" extras-linux does not alter the logging configuration.
.It Fl u Ar user
Specifies an alternative user ID to run
.Nm
as.
Use of this option to specify a minimally-privileged user is highly
recommended.
This option is ignored if
.Nm
is not started as the super-user.
.\" extras-darwin Note that if
.\" extras-darwin .Nm
.\" extras-darwin is started via
.\" extras-darwin .Xr launchd 8 ,
.\" extras-darwin it is preferable to use the
.\" extras-darwin .Dq User
.\" extras-darwin key in the launchd plist for
.\" extras-darwin .Nm
.\" extras-darwin rather than using
.\" extras-darwin .Fl u .
.It Fl U Ar umask
Specifes the file creation mask to use when creating files.
File creation on the server is suppored by the NHACP protocol
and the NabuRetroNet protocol extensions.
.\" extras-darwin Note that if
.\" extras-darwin .Nm
.\" extras-darwin is started via
.\" extras-darwin .Xr launchd 8 ,
.\" extras-darwin it is preferable to use the
.\" extras-darwin .Dq Umask
.\" extras-darwin key in the launchd plist for
.\" extras-darwin .Nm
.\" extras-darwin rather than using
.\" extras-darwin .Fl U .
.El
.Sh CONFIGURATION
.Nm
requires a configuration file in order to run.
The configuration file is a JSON-format dictionary with three stanzas in
the following order:
.Bl -tag -width "Connections"
.It Sources
An array of objects that define channel sources.
.It Channels
An array of objects that define the content channels available to
connected NABUs.
.It Connections
An array of objects that define the NABU connections
.Po
either serial connections to real hardware or TCP/IP connections to emulators
.Pc .
.El
.Pp
The next subsections describe the individual stanzas and the object
definitions they contain.
The described object properties are required unless specified otherwise.
.Ss Sources
The
.Dq Sources
stanza is an array of source objects.
Each source object has the following properties:
.Bl -tag -width "Location"
.It Name
A string that specifies the name of the source.
.It Location
A string that specifies the location of the source.
The location may be a local path name or a URL.
.El
.Ss Channels
The
.Dq Channels
stanza is an array of channel objects.
Each channel object has the following properties:
.Bl -tag -width "RetroNetExtensions"
.It Name
A string that specifies the name of the channel.
In addition to being the name displayed to the user, this is
default subdirectory relative to the root of the source that
contains the content for the channel.
.It Path
An optional string that specifies the path relative to the root
of the source that contains the content for the channel.
.It Number
A number between 1 and 255 that specifies the channel's number.
.It Type
A string that specifies if the channel contains
.Dq pak
or
.Dq nabu
files.
.It Source
A string that specifies the source of the channel.
.It ListURL
An optional string that specifies a listing file in the format
used by NabuRetroNet that lists the content of the channel.
This listing can be viewed by
.Xr nabuctl 1 ,
which can then also select these files for download on individual
connections.
.It DefaultFile
An optional string that specifes a default file to be loaded when
the NABU ROM requests image 000001.
Indiviual connections can override this by selecting a different file.
.It RetroNetExtensions
An optional boolean value
.Po
.Dq true
or
.Dq false
.Pc
that specifies if the NabuRetroNet protocol extensions are enabled
for connections using this channel.
NabuRetroNet protocol extensions are disabled by default due to
collisions with NHACP;
if the NabuRetroNet protocol extensions are enabled, then NHACP
will not be available for connections using this channel.
.El
.Ss Connections
The
.Dq Connections
stanza is an array of connection objects.
Each connection object has the following properties:
.Bl -tag -width "StorageArea"
.It Type
A string that specifies if the connection type, either
.Dq serial
or
.Dq tcp .
.It Port
A string that specifies the connect port.
For
.Dq serial
connections, this is the path to the serial port's device special file,
for example
.Dq /dev/ttyU0 .
For
.Dq tcp
connections, this is the TCP port number on which
.Nm
will listen for incoming connections from NABU emulators.
.It Baud
An optional number with a value of at least 1 that specifies the baud
rate to use for this connection.
Baud rate is only applicable to serial connections.
If the baud rate is un-specified, then the connection will default
to the NABU native baud rate of 111860, and will fall back to 115200
if the native baud rate is not supported by the serial interface.
This option is really only useful if you have modified your NABU's HCCA
port to use a different baud rate clock.
.It BaudRate
This is an alias for
.Dq Baud .
If the
.Dq Baud
property is not present,
.Dq BaudRate
will be consulted.
.It FlowControl
An optional boolean value
.Po
.Dq true
or
.Dq false
.Pc
that specifies if RTS/CTS flow control is to be used for this connection.
Flow control is only applicable to serial connections.
The default is
.Dq false .
This option is really only useful if you have modified your NABU's HCCA
port to support RTS/CTS flow control.
.It Channel
An optional number between 1 and 255 that specifies the connection's
default channel.
.It StorageArea
An optional string that specifies the local file storage directory for
this connection.
This option must be specified if you wish to use the NHACP or RetroNet
storage extensions.
In previous releases, this property was called
.Dq FileRoot ,
and the old name is still recognized for compatibility with existing
configuration files.
.El
.Pp
Here is a simple example configuration file:
.Bd -literal -offset indent
{
  "Sources": [
    {
      "Name": "NabuRetroNet",
      "Location": "https://cloud.nabu.ca",
    }
  ],
  "Channels": [
    {
      "Name": "NABU Network 1984 Cycle v1",
      "Path": "cycle1",
      "Number": 1,
      "Type": "pak",
      "Source": "NabuRetroNet"
    }
  ],
  "Connections": [
    {
      "Type": "serial",
      "Port": "/dev/ttyU0",
      "Channel": 1,
    }
  ]
}
.Ed
.Sh RUN-TIME SETUP
While it is possible to simply run
.Nm
without any run-time setup, it is strongly recommended that you do a little
extra work to run
.Nm
as a minimally-privileged user.
This section is intended to provide some guidance for how to configure
the run-time environment of
.Nm
as well as provide suggestions for file system permissions and group
management.
.Pp
First and foremost, you should create a dedicated group for all users
on the system that will have permission to do make changes to files
accessed by
.Nm
and interact with
.Nm
using
.Xr nabuctl 1 .
In these examples, we will use the group name
.Dq nabu .
.Pp
Next, you should create a dedicated user for running
.Nm .
This user does not need a home directory or a login shell, and should have
no other role on the system.
In these examples, we will use the user name
.Dq nabu .
This user's primary group should also be the
.Dq nabu
group created in the first step.
.Pp
If you will be using a serial port to communicate with real NABU hardware,
.Nm
will need to be able to open the serial port devices for reading and writing.
Many Unix-like systems provide a system group for the purpose of granting
permission to specific users to open serial ports for dial-out.  This group
might be called
.Dq dialer ,
.Dq dialout ,
or
.Dq uucp .
If your system does not provide a suitable group, create one.
In this example, the system provides a
.Dq dialer
group, and so we will use that name throughout the examples.
.Pp
Ensure the
.Dq dialer
group has read-write permission for the serial port that will be used to
connect to the NABU.
In this example, the path to the serial port is
.Dq /dev/ttyU0 .
.Bd -literal -offset indent
0 crw-rw----  1 uucp  dialer  66, 0 Dec 31 14:15 /dev/ttyU0
.Ed
.Pp
Once the persmissions on the serial port devices are set correctly, add the
.Dq nabu
user to that group.
.Pp
If you will be using the storage extensions to the NABU Adaptor protocol
.Pq such as NHACP ,
then you should create a directory for your NABU's files.
This directory will be specified in the
.Dq StorageArea
property of your NABU's connection object in the
.Nm
configuration file.
The directory should be owned by the
.Dq nabu
user and group, and should have the mode
.Em 0775
.Pq octal :
.Bd -literal -offset indent
4 drwxrwxr-x  2 nabu  nabu  512 Jan 16 22:05 living-room-nabu/
.Ed
.Pp
This will allow
.Nm
to create files in that directory, as necessary
.Pq e.g. game save files, etc. .
It is still possible to put more restrictive permissions on files inside
that directory if you want the NABU to have read-only access to some files
.Pq such as your Zork CP/M disk image .
This will also allow other users in the
.Dq nabu
group to add files to that directory to be accessed by programs running
on the NABU.
.Pp
Once you have set up the run-time environment as described above, you
should use the
.Fl u Ar user
and
.Fl U Ar umask
options when running
.Nm :
.Bd -literal -offset indent
XXXsbindirXXX/nabud -u nabu -U 002
.Ed
.Pp
The
.Fl U Ar umask
argument ensures that users in the
.Dq nabu
group will be able to manipulate any files created by programs running on
the NABU.
.Pp
.Nm
creates a Unix domain socket to allow the
.Xr nabuctl 1
program to send control messages.
.Nm
will set the owner and group of this socket to the user ID and
effective group ID that
.Nm
is running as, and allow connections from any user in that group.
If
.Nm
is configured as described above, the permissions on this socket
.Po
located at
.Dq /tmp/nabuctl.sock
.Pc
will be:
.Bd -literal -offset indend
0 srwxrwxr-x  1 nabu  nabu  0 Feb  4 05:29 /tmp/nabuctl.sock=
.Ed
.Sh FILES
By default,
.Nm
will look for its configuration file at:
.Bd -literal -offset indent
XXXsysconfdirXXX/nabud.conf
.Ed
.Pp
.Nm
creates a control message socket at:
.Bd -literal -offset indent
/tmp/nabuctl.sock
.Ed
.Pp
A more complex example configuration file can be found at:
.Bd -literal -offset indent
XXXdatadirXXX/nabud/examples/nabud.conf
.Ed
.\" extras-darwin .Pp
.\" extras-darwin A launchd plist file can be found at:
.\" extras-darwin .Bd -literal -offset indent
.\" extras-darwin XXXdatadirXXX/nabud/launchd/nabud.plist
.\" extras-darwin .Ed
.\" extras-freebsd .Pp
.\" extras-freebsd rc.conf.d and rc.d files can be found at:
.\" extras-freebsd .Bd -literal -offset indent
.\" extras-freebsd XXXdatadirXXX/nabud/rc.conf.d/nabud
.\" extras-freebsd XXXdatadirXXX/nabud/rc.d/nabud
.\" extras-freebsd .Ed
.\" extras-linux .Pp
.\" extras-linux A systemd service file can be found at:
.\" extras-linux .Bd -literal -offset indent
.\" extras-linux XXXdatadirXXX/nabud/systemd/nabud.service
.\" extras-linux .Ed
.\" extras-netbsd .Pp
.\" extras-netbsd rc.conf.d and rc.d files can be found at:
.\" extras-netbsd .Bd -literal -offset indent
.\" extras-netbsd XXXdatadirXXX/nabud/rc.conf.d/nabud
.\" extras-netbsd XXXdatadirXXX/nabud/rc.d/nabud
.\" extras-netbsd .Ed
.\" extras-openbsd .Pp
.\" extras-openbsd An rc.d start-up script can be found at:
.\" extras-openbsd .Bd -literal -offset indent
.\" extras-openbsd XXXdatadirXXX/nabud/rc.d/nabud
.\" extras-openbsd .Ed
.Sh SEE ALSO
.Xr nabuctl 1
